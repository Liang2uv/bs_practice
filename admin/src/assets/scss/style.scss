@import './variable';

* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 16px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: map-get($colors, 'light');
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
}

// 宽度样式
.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

// 文字位置
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

// 文字颜色/背景
@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size !important;
  }
}

// flex布局
.d-flex {
  display: flex;
}

.flex-colum {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

@each $typeKey,
$typeValue in $spacing-types {

  // .m-1/.p-1
  @each $sizeKey,
  $sizeValue in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$typeValue}: $sizeValue * $spacing-base-size;
    }
  }

  // mx-1
  @each $sizeKey,
  $sizeValue in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$typeValue}-left: $sizeValue * $spacing-base-size;
      #{$typeValue}-right: $sizeValue * $spacing-base-size;
    }
  }

  // my-1
  @each $sizeKey,
  $sizeValue in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey} {
      #{$typeValue}-top: $sizeValue * $spacing-base-size;
      #{$typeValue}-bottom: $sizeValue * $spacing-base-size;
    }
  }

  // .mt-0/pt-0
  @each $dirKey,
  $dirValue in $spacing-directions {

    @each $sizeKey,
    $sizeValue in $spacing-sizes {
      .#{$typeKey}#{$dirKey}-#{$sizeKey} {
        #{$typeValue}-#{$dirValue}: $sizeValue * $spacing-base-size;
      }
    }
  }
}

// 单行文字溢出显示省略号
.text-ellipsis {
  display: inline-block;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

// 边框
@each $var in (top, right, bottom, left) {
  .border-#{$var} {
    border-#{$var}: 1px solid $border-color;
  }
}
@each $var in (top, right, bottom, left) {
  .border-#{$var}-dashed {
    border-#{$var}: 1px dashed $border-color;
  }
}